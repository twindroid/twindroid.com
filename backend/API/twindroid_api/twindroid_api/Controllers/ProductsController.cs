using Microsoft.AspNetCore.Mvc;
using twindroid_api.Models;
using twindroid_api.Models.Services;

// For more information on enabling Web API for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

namespace twindroid_api.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class productController : ControllerBase
    {
        private readonly IProductService productService;

        public productController(IProductService productService)
        {
            this.productService = productService;
        }
        // GET: api/<ProductsController>
        [HttpGet("search")]
        public ActionResult<List<Products>> Get()
        {
            return productService.Get();
        }

        // GET api/<ProductsController>/5
        [HttpGet("{id}")]
        public ActionResult<Products> GetById(string id)
        {
            var product = productService.Get(id);

            if (product == null)
                return NotFound($"Id não encontrado");

            return product;
        }

        // POST api/<ProductsController>
        [HttpPost]
        public ActionResult<Products> Post([FromBody] Products product)
        {
            if (!string.IsNullOrEmpty(product.Id))
            {
                // You may want to handle the case where the client is sending an ID
                return BadRequest("Id should not be provided. It will be generated by the database.");
            }

            productService.Create(product);

            return CreatedAtAction(nameof(GetById), new { id = product.Id }, product);
        }

        // PUT api/<ProductsController>/5
        [HttpPut("{id}")]
        public void Put(int id, [FromBody] string value)
        {
        }

        // DELETE api/<ProductsController>/5
        [HttpDelete("{id}")]
        public void Delete(int id)
        {
        }
    }
}
